name: CI

on: [push, pull_request]

env:
  RUST_MINVERSION: 1.65.0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly

        features:
          - ''

        include:
          - rust: stable
            features: ''
          - rust: stable
            features: '--no-default-features'
          - rust: stable
            features: '--no-default-features --features "permutation"'
          - rust: stable
            features: '--no-default-features --features "permutation_opt"'
          - rust: nightly
            features: ''
          - rust: nightly
            features: '--no-default-features'
          - rust: nightly
            features: '--no-default-features --features "permutation"'
          - rust: stable
            features: '--no-default-features --features "permutation_opt"'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose ${{ matrix.features }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose ${{ matrix.features }}

  minrust:
    name: Test minimal rust version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust (${{ env.RUST_MINVERSION }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_MINVERSION }}
          profile: minimal
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --all-features

  doc:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --verbose

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        continue-on-error: true
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
